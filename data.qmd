# Data

We used a publicly available [dataset](www.retentionprediction.org/hplc/database/) that comprises the measurements of RP-HPLC retention times collected for 1026 analytes. The retention times were measured under isocratic conditions on Eclipse Plus C18 (Agilent) stationary phase with 3.5 Î¼m particles. The experiments were conducted using a mixture of two solvents: solvent A, which was made of 0.1% formic acid in water, and solvent B, which was made of 0.1% formic acid in acetonitrile. The column temperature was set at 35\^{\circ}C. The data were collected by Boswell et al. and were used to create a method to predict retention time by Back-Calculating the Gradient.

```{r message=FALSE, warning=FALSE}
# load packages
library(here)
library(ggplot2)

# load data
DS        <- read.csv(here::here("1_data/database_stan_1026.csv"),header = TRUE, sep = ";", dec = ".")
DS_names  <- read.csv(here::here("1_data/database_stan_1026_analyte_names.csv"),header = TRUE, sep = ",", dec = ".")

# divide the analytes into groups according to MM
DS$MM_group <- with(DS, ifelse(MW_ACD < 200, "1",
                                 ifelse(MW_ACD < 300 & MW_ACD >= 200, "2", 
                                        ifelse(MW_ACD < 400 & MW_ACD >= 300, "3", "4" ))))
lab <- function(x){
  ifelse(x == 1, "MM < 200",
         ifelse(x == 2, "200 \u2264 MM < 300", 
                ifelse(x == 3, "300 \u2264 MM < 400", "400 \u2264 MM" )))
}

nObs <- length(DS$ID)
nAnalytes <- length(unique(DS$ID))
fi <- seq(0,1,0.1)

ggplot(data=DS, aes(x=concentration, y=logk, group=ID)) + 
  geom_line(aes(color=ID)) + 
  facet_wrap(~MM_group, ncol=2, labeller=labeller(MM_group = lab)) +
  labs(x = expression(varphi), y = expression(Log~k[Obs])) + 
  theme_gray(base_size = 14) + theme(legend.position="none") 
```

The pH value of the mobile phase was verified experimentally for the purpose of this work. It equaled 2.66 with a standard deviation of 0.19 for the range of acetonitrile contents from 5 to 95%.

```{r message=FALSE, warning=FALSE}
DS_pH <- read.csv(here::here("1_data/pH.csv"),header = TRUE, sep = ";", dec = ",")


ggplot(data=DS_pH, aes(x=fi, y=pH)) + labs(x = expression(varphi), y = "pH") + 
  geom_point() + geom_hline(yintercept=mean(DS_pH$pH), color = "red") +
  geom_hline(yintercept=mean(DS_pH$pH)-sd(DS_pH$pH), linetype="dashed", color = "red") +
  geom_hline(yintercept=mean(DS_pH$pH)+sd(DS_pH$pH), linetype="dashed", color = "red") + ylim(c(2.0,3.5))
```

The values of molecular mass MM were added to the dataset. They were calculated using [ACD/Labs program](www.acdlabs.com) based on the provided structures of analytes. The MM ranged from 73.09 to 656.8.

```{r message=FALSE, warning=FALSE}
library(tidyverse)

df <- DS %>% distinct(ID,MW_ACD) %>%
  gather(MW_ACD, key= ACD, value="value") %>%
  mutate(ACD = recode(ACD, "MW_ACD" = "MM"))

ggplot(data= df , aes(x=ACD, y=value))+
  geom_boxplot(aes(1))+facet_wrap(~ ACD,scales = "free") +
  theme(axis.title.x=element_blank(),
        axis.text.x=element_blank(),
        axis.ticks.x=element_blank())
```
Information on the functional groups of individual compounds has also been added to the data.

```{r message=FALSE, warning=FALSE}
functional_groups         <- read.csv(here::here("1_data/checkmol_nr_groups.csv"),header = TRUE, sep = ",", dec = ".")
functional_groups_names   <- read.delim(here::here("1_data/checkmol_functional_group_names.csv"),header = TRUE, sep = ";", dec = ".")
```

This information was first prepared for analysis in several steps:

1) combine nr of caroboxylic acid and carboxyalic acid salt functional groups
```{r message=FALSE, warning=FALSE}
functional_groups[,76]=functional_groups[,76]+functional_groups[,77]       
functional_groups[which(functional_groups[,202]>8.1),202] = 8; # heterocyclic compounds with more than 8 heterocycles are treated as if they have eigth
```

2) exclude functional groups that repeat itself (some groups are nested)
```{r message=FALSE, warning=FALSE}
idx_excluded <- c(1, 2, 3, 6, 27, 28, 37, 47, 48, 51, 55, 61, 62, 67, 73, 74, 75, 77, 80, 91, 99, 109, 116, 117, 121, 125, 129, 142, 153, 154, 160, 161, 168, 173, 178, 181, 182, 186, 187, 191, 196)
functional_groups_names[which(functional_groups_names$ID_group %in% idx_excluded),2]

functional_groups <- functional_groups[,-idx_excluded]
functional_groups_names <- functional_groups_names[-idx_excluded,]
```

3) exclude functional groups not present on any analyte from the dataset

```{r message=FALSE, warning=FALSE}
idx_not_present = which(colSums(functional_groups==0) == nrow(functional_groups))
functional_groups_names[which(functional_groups_names$ID_group %in% idx_not_present),2]

functional_groups <- functional_groups[,-idx_not_present]
functional_groups_names <- functional_groups_names[-idx_not_present,]
```
The functional groups present in the analyzed chemical compounds are presented below, along with their frequencies

```{r message=FALSE, warning=FALSE}
sumdata=data.frame(value=apply(functional_groups,2,sum))
sumdata$key=functional_groups_names[,2]
sumdata <- sumdata[order(sumdata$value),]
sumdata$split <- rep(c(1,2),each=50)

layout(c(1,2), widths=c(1,3))

p1 <- ggplot(data=sumdata[which(sumdata$split==1),], aes(x=reorder(key, +value), y=value, fill=key)) +
  geom_bar(fill="blue", stat="identity") + 
  theme(legend.position = "none",
        axis.title.x=element_blank(),
        axis.title.y=element_blank()) + 
  coord_flip()+
  scale_y_continuous(breaks=c(0,5,10))

p2 <- ggplot(data=sumdata[which(sumdata$split==2),], aes(x=reorder(key, +value), y=value, fill=key)) +
  geom_bar(fill="blue", stat="identity") + 
  theme(legend.position = "none",
        axis.title.x=element_blank(),
        axis.title.y=element_blank()) + 
  coord_flip() + scale_y_continuous(trans='log10',breaks=c(0,10,100,1000))

library(patchwork)

# Custom design (# means empty area)
design <- "
  1222
"

# Combine the plots with a custom layout
p1 + p2 +
  plot_layout(design = design)
```
